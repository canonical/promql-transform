name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write  # Enable the creation of GitHub releases

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: Install linter
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.42.1
      - name: Lint files
        run: |
          golangci-lint run

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: Run tests
        run: |
          go test ./... -coverprofile coverage.out

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        # Do not use fetch-depth 0 as suggested by Goreleaser,
        # because we run with --snapshot and do not want issues with
        # our non-SemVer tags
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: Create artifacts
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          # Build on snapshot to avoid problems with our non SemVer tags
          args: --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # At this point we still don't have a tag. It is just as well, because
      # we do not want a SemVer tag, and having a non SemVer tag would break
      # GoReleaser (https://goreleaser.com/limitations/semver/).
      - name: Upload amd64 assets
        uses: actions/upload-artifact@v3
        with:
          name: promql-transform-amd64
          # The v1 refers to the amd64 arch, see https://goreleaser.com/customization/build/
          path: dist/promql-transform_linux_amd64_v1/promql-transform
      - name: Upload arm64 assets
        uses: actions/upload-artifact@v3
        with:
          name: promql-transform-arm64
          path: dist/promql-transform_linux_arm64/promql-transform

  ghrelease:
    name: Create GitHub release
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"    
      - name: Checkout
        uses: actions/checkout@v2
      - name: Change perms on GITHUB_WORKSPACE
        # Workaround for Git 2.34, see https://github.com/rickstaa/action-create-tag/issues/10
        run: |
          sudo chown -R root:root $GITHUB_WORKSPACE
          sudo chmod -R 0777 $GITHUB_WORKSPACE
      - name: Create release tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "rel-${{ steps.date.outputs.date }}"
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts/
      - name: Prepare artifacts for release
        run: |
          mkdir -p artifacts/release
          find artifacts -type f | awk -F/ '{ print $2 }' | xargs -I {} cp artifacts/{}/promql-transform artifacts/release/{}
      - name: Create GitHub release
        uses: ncipollo/release-action@v1
        with:
          name: "Release ${{ steps.date.outputs.date }}"
          omitBody: true
          artifacts: "artifacts/release/*"
          tag: "rel-${{ steps.date.outputs.date }}"
          token: ${{ secrets.GITHUB_TOKEN }}

  charmhubrelease:
    name: Release to CharmHub
    runs-on: ubuntu-latest
    needs:
      - ghrelease
    strategy:
      matrix:
        arch: [amd64, arm64]
        charm: [prometheus-k8s, grafana-k8s]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts/
      - name: Install charmcraft
        run: |
          sudo snap install charmcraft --classic
      - id: charmhubupload
        name: Upload ${{matrix.arch}} resource revision to ${{matrix.charm}} charm
        env:
          CHARMCRAFT_AUTH: ${{ secrets.CHARMHUB_TOKEN }}
        run: |
          if output=$(charmcraft upload-resource ${{ matrix.charm }} promql-transform-${{matrix.arch}} --file artifacts/promql-transform-${{matrix.arch}}/promql-transform); then
            if revision=$(echo "${output}" | sed 's/^Revision \([0-9]\{1,\}\) .*$/\1/'); then
              echo "::set-output name=rev::${revision}"
            fi
          else
            echo "charmcraft upload-resource failed: ${output}"
            exit 1
          fi

          if [ -z "${revision}" ]; then
            echo "No revision found in the output of charmcraft upload-resource:\n${output}"
            exit 2
          fi
      - name: Change perms on GITHUB_WORKSPACE
        # Workaround for Git 2.34, see https://github.com/rickstaa/action-create-tag/issues/10
        run: |
          sudo chown -R root:root $GITHUB_WORKSPACE
          sudo chmod -R 0777 $GITHUB_WORKSPACE
      - name: Create git tag for ${{matrix.charm}} charm, ${{matrix.arch}} architecture
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "${{ matrix.charm }}-rev${{ steps.charmhubupload.outputs.rev }}"
          message: "Resource revision ${{ matrix.charm }}/${{ steps.charmhubupload.outputs.rev }}"
